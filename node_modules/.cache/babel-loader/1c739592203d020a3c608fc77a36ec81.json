{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport _classCallCheck from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/evan/antdAdminPro/src/components/tables/EditableTable.jsx\";\n\n/**\n * Created by hao.cheng on 2017/4/16.\n */\nimport React from 'react';\nvar data = [];\n\nfor (var i = 0; i < 100; i++) {\n  data.push({\n    key: i.toString(),\n    name: \"Edrward \".concat(i),\n    age: 32,\n    address: \"London Park no. \".concat(i)\n  });\n}\n\nvar FormItem = _Form.Item;\nvar EditableContext = React.createContext();\n\nvar EditableRow = function EditableRow(_ref) {\n  var form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nvar EditableFormRow = _Form.create()(EditableRow);\n\nvar EditableCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditableCell, _React$Component);\n\n  function EditableCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditableCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getInput = function () {\n      if (_this.props.inputType === 'number') {\n        return React.createElement(_InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          editing = _this$props.editing,\n          dataIndex = _this$props.dataIndex,\n          title = _this$props.title,\n          inputType = _this$props.inputType,\n          record = _this$props.record,\n          index = _this$props.index,\n          restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\"]);\n\n      return React.createElement(EditableContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, function (form) {\n        var getFieldDecorator = form.getFieldDecorator;\n        return React.createElement(\"td\", Object.assign({}, restProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), editing ? React.createElement(FormItem, {\n          style: {\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, getFieldDecorator(dataIndex, {\n          rules: [{\n            required: true,\n            message: \"Please Input \".concat(title, \"!\")\n          }],\n          initialValue: record[dataIndex]\n        })(_this2.getInput())) : restProps.children);\n      });\n    }\n  }]);\n\n  return EditableCell;\n}(React.Component);\n\nvar EditableTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EditableTable, _React$Component2);\n\n  function EditableTable(props) {\n    var _this3;\n\n    _classCallCheck(this, EditableTable);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(EditableTable).call(this, props));\n\n    _this3.isEditing = function (record) {\n      return record.key === _this3.state.editingKey;\n    };\n\n    _this3.cancel = function () {\n      _this3.setState({\n        editingKey: ''\n      });\n    };\n\n    _this3.state = {\n      data: data,\n      editingKey: ''\n    };\n    _this3.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '25%',\n      editable: true\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n      width: '15%',\n      editable: true\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n      width: '40%',\n      editable: true\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: function render(text, record) {\n        var editable = _this3.isEditing(record);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, function (form) {\n          return React.createElement(_Button, {\n            onClick: function onClick() {\n              return _this3.save(form, record.key);\n            },\n            style: {\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \"Save\");\n        }), React.createElement(_Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: function onConfirm() {\n            return _this3.cancel(record.key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(_Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(_Button, {\n          onClick: function onClick() {\n            return _this3.edit(record.key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n    }];\n    return _this3;\n  }\n\n  _createClass(EditableTable, [{\n    key: \"edit\",\n    value: function edit(key) {\n      this.setState({\n        editingKey: key\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save(form, key) {\n      var _this4 = this;\n\n      form.validateFields(function (error, row) {\n        if (error) {\n          return;\n        }\n\n        var newData = _toConsumableArray(_this4.state.data);\n\n        var index = newData.findIndex(function (item) {\n          return key === item.key;\n        });\n\n        if (index > -1) {\n          var item = newData[index];\n          newData.splice(index, 1, _objectSpread({}, item, row));\n\n          _this4.setState({\n            data: newData,\n            editingKey: ''\n          });\n        } else {\n          newData.push(data);\n\n          _this4.setState({\n            data: newData,\n            editingKey: ''\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var components = {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell\n        }\n      };\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) {\n          return col;\n        }\n\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              inputType: col.dataIndex === 'age' ? 'number' : 'text',\n              dataIndex: col.dataIndex,\n              title: col.title,\n              editing: _this5.isEditing(record)\n            };\n          }\n        });\n      });\n      return React.createElement(_Table, {\n        components: components,\n        bordered: true,\n        dataSource: this.state.data,\n        columns: columns,\n        rowClassName: \"editable-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EditableTable;\n}(React.Component);\n\nexport { EditableTable as default };","map":{"version":3,"sources":["/Users/evan/antdAdminPro/src/components/tables/EditableTable.jsx"],"names":["React","data","i","push","key","toString","name","age","address","FormItem","Item","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","getInput","inputType","editing","dataIndex","title","record","restProps","getFieldDecorator","margin","rules","required","message","initialValue","children","Component","EditableTable","isEditing","state","editingKey","cancel","setState","columns","width","editable","render","text","save","marginRight","edit","validateFields","error","row","newData","findIndex","item","splice","components","body","cell","map","col","onCell"],"mappings":"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","sourcesContent":["/**\n * Created by hao.cheng on 2017/4/16.\n */\n\nimport React from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Button } from 'antd';\n\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n\tdata.push({\n\t\tkey: i.toString(),\n\t\tname: `Edrward ${i}`,\n\t\tage: 32,\n\t\taddress: `London Park no. ${i}`,\n\t});\n}\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n\t<EditableContext.Provider value={form}>\n\t\t<tr {...props} />\n\t</EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n\tgetInput = () => {\n\t\tif (this.props.inputType === 'number') {\n\t\t\treturn <InputNumber />;\n\t\t}\n\t\treturn <Input />;\n\t};\n\trender() {\n\t\tconst {\n\t\t\tediting,\n\t\t\tdataIndex,\n\t\t\ttitle,\n\t\t\tinputType,\n\t\t\trecord,\n\t\t\tindex,\n\t\t\t...restProps\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<EditableContext.Consumer>\n\t\t\t\t{(form) => {\n\t\t\t\t\tconst { getFieldDecorator } = form;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<td {...restProps}>\n\t\t\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t\t\t<FormItem style={{ margin: 0 }}>\n\t\t\t\t\t\t\t\t\t{getFieldDecorator(dataIndex, {\n\t\t\t\t\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tmessage: `Please Input ${title}!`,\n\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\tinitialValue: record[dataIndex],\n\t\t\t\t\t\t\t\t\t})(this.getInput())}\n\t\t\t\t\t\t\t\t</FormItem>\n\t\t\t\t\t\t\t) : restProps.children}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</EditableContext.Consumer>\n\t\t);\n\t}\n}\n\nexport default class EditableTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { data, editingKey: '' };\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\ttitle: 'name',\n\t\t\t\tdataIndex: 'name',\n\t\t\t\twidth: '25%',\n\t\t\t\teditable: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'age',\n\t\t\t\tdataIndex: 'age',\n\t\t\t\twidth: '15%',\n\t\t\t\teditable: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'address',\n\t\t\t\tdataIndex: 'address',\n\t\t\t\twidth: '40%',\n\t\t\t\teditable: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'operation',\n\t\t\t\tdataIndex: 'operation',\n\t\t\t\trender: (text, record) => {\n\t\t\t\t\tconst editable = this.isEditing(record);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{editable ? (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<EditableContext.Consumer>\n\t\t\t\t\t\t\t\t\t\t{form => (\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.save(form, record.key)}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 8 }}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tSave\n                      \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</EditableContext.Consumer>\n\t\t\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\t\t\ttitle=\"Sure to cancel?\"\n\t\t\t\t\t\t\t\t\t\tonConfirm={() => this.cancel(record.key)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Button>Cancel</Button>\n\t\t\t\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.edit(record.key)}>Edit</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\tisEditing = (record) => {\n\t\treturn record.key === this.state.editingKey;\n\t};\n\tedit(key) {\n\t\tthis.setState({ editingKey: key });\n\t}\n\tsave(form, key) {\n\t\tform.validateFields((error, row) => {\n\t\t\tif (error) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newData = [...this.state.data];\n\t\t\tconst index = newData.findIndex(item => key === item.key);\n\t\t\tif (index > -1) {\n\t\t\t\tconst item = newData[index];\n\t\t\t\tnewData.splice(index, 1, {\n\t\t\t\t\t...item,\n\t\t\t\t\t...row,\n\t\t\t\t});\n\t\t\t\tthis.setState({ data: newData, editingKey: '' });\n\t\t\t} else {\n\t\t\t\tnewData.push(data);\n\t\t\t\tthis.setState({ data: newData, editingKey: '' });\n\t\t\t}\n\t\t});\n\t}\n\tcancel = () => {\n\t\tthis.setState({ editingKey: '' });\n\t};\n\trender() {\n\t\tconst components = {\n\t\t\tbody: {\n\t\t\t\trow: EditableFormRow,\n\t\t\t\tcell: EditableCell,\n\t\t\t},\n\t\t};\n\n\t\tconst columns = this.columns.map((col) => {\n\t\t\tif (!col.editable) {\n\t\t\t\treturn col;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...col,\n\t\t\t\tonCell: record => ({\n\t\t\t\t\trecord,\n\t\t\t\t\tinputType: col.dataIndex === 'age' ? 'number' : 'text',\n\t\t\t\t\tdataIndex: col.dataIndex,\n\t\t\t\t\ttitle: col.title,\n\t\t\t\t\tediting: this.isEditing(record),\n\t\t\t\t}),\n\t\t\t};\n\t\t});\n\n\t\treturn (\n\t\t\t<Table\n\t\t\t\tcomponents={components}\n\t\t\t\tbordered\n\t\t\t\tdataSource={this.state.data}\n\t\t\t\tcolumns={columns}\n\t\t\t\trowClassName=\"editable-row\"\n\t\t\t/>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}