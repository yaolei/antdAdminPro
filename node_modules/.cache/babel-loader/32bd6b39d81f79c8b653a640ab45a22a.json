{"ast":null,"code":"import _classCallCheck from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/antdAdminPro/src/components/widget/PwaInstaller.js\";\n\n/*\n * File: PwaInstaller.js\n * Desc: pwa手动触发安装\n * File Created: 2018-11-07 21:13:18\n * Author: chenghao\n * \n * Copyright 2018 - present, chenghao\n */\nimport React, { Component } from 'react';\n\nvar PwaInstaller =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PwaInstaller, _Component);\n\n  function PwaInstaller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PwaInstaller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PwaInstaller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      installed: true\n    };\n\n    _this.beforeInstallPrompt = function (e) {\n      console.log('beforeinstallprompt Event fired'); // 未安装PWA应用\n\n      _this.setState({\n        installed: false\n      });\n\n      e.preventDefault(); // Stash the event so it can be triggered later.\n\n      _this.deferredPrompt = e;\n      return false;\n    };\n\n    _this.download = function () {\n      if (_this.deferredPrompt !== undefined) {\n        // The user has had a postive interaction with our app and Chrome\n        // has tried to prompt previously, so let's show the prompt.\n        _this.deferredPrompt.prompt(); // Follow what the user has done with the prompt.\n\n\n        _this.deferredPrompt.userChoice.then(function (choiceResult) {\n          console.log(choiceResult.outcome);\n\n          if (choiceResult.outcome === 'dismissed') {\n            console.log('User cancelled home screen install');\n          } else {\n            console.log('User added to home screen');\n          } // We no longer need the prompt.  Clear it up.\n\n\n          _this.deferredPrompt = null;\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PwaInstaller, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('beforeinstallprompt', this.beforeInstallPrompt);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('beforeinstallprompt', this.beforeInstallPrompt);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var installed = this.state.installed;\n      return !installed && React.createElement(\"div\", {\n        className: \"installer\",\n        onClick: this.download,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"installer__btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PwaInstaller;\n}(Component);\n\nexport default PwaInstaller;","map":{"version":3,"sources":["/Users/evan/antdAdminPro/src/components/widget/PwaInstaller.js"],"names":["React","Component","PwaInstaller","state","installed","beforeInstallPrompt","e","console","log","setState","preventDefault","deferredPrompt","download","undefined","prompt","userChoice","then","choiceResult","outcome","window","addEventListener","removeEventListener"],"mappings":";;;;;;;AAAA;;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Y;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;UAURC,mB,GAAsB,UAACC,CAAD,EAAO;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EADyB,CAEzB;;AACA,YAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEAE,MAAAA,CAAC,CAACI,cAAF,GALyB,CAMzB;;AACA,YAAKC,cAAL,GAAsBL,CAAtB;AACA,aAAO,KAAP;AACH,K;;UACDM,Q,GAAW,YAAM;AACb,UAAG,MAAKD,cAAL,KAAwBE,SAA3B,EAAsC;AAClC;AACA;AACA,cAAKF,cAAL,CAAoBG,MAApB,GAHkC,CAIlC;;;AACA,cAAKH,cAAL,CAAoBI,UAApB,CAA+BC,IAA/B,CAAoC,UAAAC,YAAY,EAAI;AAEhDV,UAAAA,OAAO,CAACC,GAAR,CAAYS,YAAY,CAACC,OAAzB;;AACA,cAAGD,YAAY,CAACC,OAAb,KAAyB,WAA5B,EAAyC;AACrCX,YAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH,WAFD,MAEO;AACHD,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,WAP+C,CAQhD;;;AACA,gBAAKG,cAAL,GAAsB,IAAtB;AACH,SAVD;AAWD;AACN,K;;;;;;;wCAlCmB;AAChBQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C,KAAKf,mBAApD;AACH;;;2CACsB;AACnBc,MAAAA,MAAM,CAACE,mBAAP,CAA2B,qBAA3B,EAAkD,KAAKhB,mBAAvD;AACH;;;6BA8BQ;AAAA,UACGD,SADH,GACiB,KAAKD,KADtB,CACGC,SADH;AAEL,aACI,CAACA,SAAD,IACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,OAAO,EAAE,KAAKQ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR;AAOH;;;;EAjDsBX,S;;AAoD3B,eAAeC,YAAf","sourcesContent":["/*\n * File: PwaInstaller.js\n * Desc: pwa手动触发安装\n * File Created: 2018-11-07 21:13:18\n * Author: chenghao\n * \n * Copyright 2018 - present, chenghao\n */\nimport React, { Component } from 'react';\n\nclass PwaInstaller extends Component {\n    state = {\n        installed: true\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeinstallprompt', this.beforeInstallPrompt);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('beforeinstallprompt', this.beforeInstallPrompt);\n    }\n    beforeInstallPrompt = (e) => {\n        console.log('beforeinstallprompt Event fired');\n        // 未安装PWA应用\n        this.setState({ installed: false })\n  \n        e.preventDefault();\n        // Stash the event so it can be triggered later.\n        this.deferredPrompt = e;\n        return false;\n    }\n    download = () => {\n        if(this.deferredPrompt !== undefined) {\n            // The user has had a postive interaction with our app and Chrome\n            // has tried to prompt previously, so let's show the prompt.\n            this.deferredPrompt.prompt();\n            // Follow what the user has done with the prompt.\n            this.deferredPrompt.userChoice.then(choiceResult => {\n        \n                console.log(choiceResult.outcome);\n                if(choiceResult.outcome === 'dismissed') {\n                    console.log('User cancelled home screen install');\n                } else {\n                    console.log('User added to home screen');\n                }\n                // We no longer need the prompt.  Clear it up.\n                this.deferredPrompt = null;\n            });\n          }\n    }\n    render() {\n        const { installed } = this.state;\n        return (\n            !installed && (\n                <div className=\"installer\" onClick={this.download}>\n                    <div className=\"installer__btn\" />\n                </div>\n            )\n        )\n    }\n}\n\nexport default PwaInstaller;"]},"metadata":{},"sourceType":"module"}