{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/antdAdminPro/src/components/tables/AsynchronousTable.jsx\";\n\n/**\n * Created by hao.cheng on 2017/4/16.\n */\nimport React from 'react';\nimport { getBbcNews } from '../../axios';\nimport BreadcrumbCustom from '../BreadcrumbCustom';\nvar columns = [{\n  title: '新闻标题',\n  dataIndex: 'title',\n  width: 100,\n  render: function render(text, record) {\n    return React.createElement(\"a\", {\n      href: record.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, text);\n  }\n}, {\n  title: '作者',\n  dataIndex: 'author',\n  width: 80\n}, {\n  title: '发布时间',\n  dataIndex: 'publishedAt',\n  width: 80\n}, {\n  title: '描述',\n  dataIndex: 'description',\n  width: 200\n}];\n\nvar AsynchronousTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AsynchronousTable, _React$Component);\n\n  function AsynchronousTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AsynchronousTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AsynchronousTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedRowKeys: [],\n      // Check here to configure the default column\n      loading: false,\n      data: []\n    };\n\n    _this.start = function () {\n      _this.setState({\n        loading: true\n      });\n\n      getBbcNews().then(function (_ref) {\n        var articles = _ref.articles;\n\n        _this.setState({\n          data: articles,\n          loading: false\n        });\n      });\n    };\n\n    _this.onSelectChange = function (selectedRowKeys) {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AsynchronousTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          selectedRowKeys = _this$state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        onChange: this.onSelectChange\n      };\n      var hasSelected = selectedRowKeys.length > 0;\n      return React.createElement(\"div\", {\n        className: \"gutter-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(BreadcrumbCustom, {\n        first: \"\\u8868\\u683C\",\n        second: \"\\u5F02\\u6B65\\u8868\\u683C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(_Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        className: \"gutter-row\",\n        md: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gutter-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        title: \"\\u5F02\\u6B65\\u8868\\u683C--BBC\\u65B0\\u95FB\\u4ECA\\u65E5\\u70ED\\u95E8\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.start,\n        disabled: loading,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Reload\"), React.createElement(\"span\", {\n        style: {\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, hasSelected ? \"Selected \".concat(selectedRowKeys.length, \" items\") : '')), React.createElement(_Table, {\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return AsynchronousTable;\n}(React.Component);\n\nexport default AsynchronousTable;","map":{"version":3,"sources":["/Users/evan/antdAdminPro/src/components/tables/AsynchronousTable.jsx"],"names":["React","getBbcNews","BreadcrumbCustom","columns","title","dataIndex","width","render","text","record","url","AsynchronousTable","state","selectedRowKeys","loading","data","start","setState","then","articles","onSelectChange","console","log","rowSelection","onChange","hasSelected","length","marginBottom","marginLeft","Component"],"mappings":"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","sourcesContent":["/**\n * Created by hao.cheng on 2017/4/16.\n */\nimport React from 'react';\nimport { Table, Button, Row, Col, Card } from 'antd';\nimport { getBbcNews } from '../../axios';\nimport BreadcrumbCustom from '../BreadcrumbCustom';\n\nconst columns = [{\n    title: '新闻标题',\n    dataIndex: 'title',\n    width: 100,\n    render: (text, record) => <a href={record.url} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n}, {\n    title: '作者',\n    dataIndex: 'author',\n    width: 80\n}, {\n    title: '发布时间',\n    dataIndex: 'publishedAt',\n    width: 80\n}, {\n    title: '描述',\n    dataIndex: 'description',\n    width: 200\n}];\n\nclass AsynchronousTable extends React.Component {\n    state = {\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        data: []\n    };\n    componentDidMount() {\n        this.start();\n    }\n    start = () => {\n        this.setState({ loading: true });\n        getBbcNews().then(({ articles }) => {\n            this.setState({\n                data: articles,\n                loading: false\n            });\n        });\n    };\n    onSelectChange = (selectedRowKeys) => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n    };\n    render() {\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div className=\"gutter-example\">\n                <BreadcrumbCustom first=\"表格\" second=\"异步表格\" />\n                <Row gutter={16}>\n                    <Col className=\"gutter-row\" md={24}>\n                        <div className=\"gutter-box\">\n                            <Card title=\"异步表格--BBC新闻今日热门\" bordered={false}>\n                                <div style={{ marginBottom: 16 }}>\n                                    <Button type=\"primary\" onClick={this.start}\n                                            disabled={loading} loading={loading}\n                                    >Reload</Button>\n                                    <span style={{ marginLeft: 8 }}>{hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}</span>\n                                </div>\n                                <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\n                            </Card>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default AsynchronousTable;"]},"metadata":{},"sourceType":"module"}