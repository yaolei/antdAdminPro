{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/evan/antdAdminPro/src/components/forms/BasicForm.jsx\";\n\n/**\n * Created by hao.cheng on 2017/4/13.\n */\nimport React, { Component } from 'react';\nimport LoginForm from './LoginForm';\nimport ModalForm from './ModalForm';\nimport HorizontalForm from './HorizontalForm';\nimport BreadcrumbCustom from '../BreadcrumbCustom';\nvar FormItem = _Form.Item;\nvar Option = _Select.Option;\nvar residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\n\nvar BasicForms =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BasicForms, _Component);\n\n  function BasicForms() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BasicForms);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BasicForms)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.checkPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.checkConfirm = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(BasicForms, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 14\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 14,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(_Select, {\n        className: \"icp-selector\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"+86\")));\n      return React.createElement(\"div\", {\n        className: \"gutter-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(BreadcrumbCustom, {\n        first: \"\\u8868\\u5355\",\n        second: \"\\u57FA\\u7840\\u8868\\u5355\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(_Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        className: \"gutter-row\",\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gutter-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        title: \"\\u6CE8\\u518C\\u8868\\u5355\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u90AE\\u7BB1\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: '请输入合理的邮箱地址!'\n        }, {\n          required: true,\n          message: '请输入邮箱地址!'\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u5BC6\\u7801\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: '请输入密码!'\n        }, {\n          validator: this.checkConfirm\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: '请确认你的密码!'\n        }, {\n          validator: this.checkPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"\\u6635\\u79F0\\xA0\", React.createElement(_Tooltip, {\n          title: \"\\u522B\\u4EBA\\u600E\\u4E48\\u79F0\\u547C\\u4F60?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }))),\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: '请输入昵称!',\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u5E38\\u4F4F\\u5730\\u5740\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), getFieldDecorator('residence', {\n        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n        rules: [{\n          type: 'array',\n          required: true,\n          message: '请选择你的常住地址!'\n        }]\n      })(React.createElement(_Cascader, {\n        options: residences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u7535\\u8BDD\\u53F7\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: '请输入你的电话号码!'\n        }]\n      })(React.createElement(_Input, {\n        addonBefore: prefixSelector,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u9A8C\\u8BC1\\u7801\",\n        extra: \"\\u6211\\u4EEC\\u5FC5\\u987B\\u786E\\u8BA4\\u4F60\\u4E0D\\u662F\\u673A\\u5668\\u4EBA.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(_Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, getFieldDecorator('captcha', {\n        rules: [{\n          required: true,\n          message: '请输入你获取的验证码!'\n        }]\n      })(React.createElement(_Input, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        style: {\n          marginBottom: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"\\u6211\\u5DF2\\u7ECF\\u9605\\u8BFB\\u8FC7 \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"\\u534F\\u8BAE\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\")))))), React.createElement(_Col, {\n        className: \"gutter-row\",\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gutter-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        title: \"\\u767B\\u5F55\\u8868\\u5355\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))))), React.createElement(_Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        className: \"gutter-row\",\n        md: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gutter-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        title: \"\\u6C34\\u5E73\\u8868\\u5355\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(HorizontalForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))), React.createElement(_Col, {\n        className: \"gutter-row\",\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gutter-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        title: \"\\u5F39\\u5C42\\u8868\\u5355\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(ModalForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return BasicForms;\n}(Component);\n\nvar BasicForm = _Form.create()(BasicForms);\n\nexport default BasicForm;","map":{"version":3,"sources":["/Users/evan/antdAdminPro/src/components/forms/BasicForm.jsx"],"names":["React","Component","LoginForm","ModalForm","HorizontalForm","BreadcrumbCustom","FormItem","Item","Option","residences","value","label","children","BasicForms","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","target","setState","checkPassword","rule","callback","getFieldValue","checkConfirm","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","rules","type","message","required","validator","whitespace","marginBottom","valuePropName","BasicForm","create"],"mappings":"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","sourcesContent":["/**\n * Created by hao.cheng on 2017/4/13.\n */\nimport React, { Component } from 'react';\nimport { Card, Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button } from 'antd';\nimport LoginForm from './LoginForm';\nimport ModalForm from './ModalForm';\nimport HorizontalForm from './HorizontalForm';\nimport BreadcrumbCustom from '../BreadcrumbCustom';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst residences = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [{\n            value: 'xihu',\n            label: 'West Lake',\n        }],\n    }],\n}, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [{\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men',\n        }],\n    }],\n}];\n\nclass BasicForms extends Component {\n    state = {\n        confirmDirty: false,\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    checkPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n    checkConfirm = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 14 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 14,\n                    offset: 8,\n                },\n            },\n        };\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '86',\n        })(\n            <Select className=\"icp-selector\" style={{width: '60px'}}>\n                <Option value=\"86\">+86</Option>\n            </Select>\n        );\n        return (\n        <div className=\"gutter-example\">\n            <BreadcrumbCustom first=\"表单\" second=\"基础表单\" />\n            <Row gutter={16}>\n                <Col className=\"gutter-row\" md={12}>\n                    <div className=\"gutter-box\">\n                        <Card title=\"注册表单\" bordered={false}>\n                            <Form onSubmit={this.handleSubmit}>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label=\"邮箱\"\n                                    hasFeedback\n                                >\n                                    {getFieldDecorator('email', {\n                                        rules: [{\n                                            type: 'email', message: '请输入合理的邮箱地址!',\n                                        }, {\n                                            required: true, message: '请输入邮箱地址!',\n                                        }],\n                                    })(\n                                        <Input />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label=\"密码\"\n                                    hasFeedback\n                                >\n                                    {getFieldDecorator('password', {\n                                        rules: [{\n                                            required: true, message: '请输入密码!',\n                                        }, {\n                                            validator: this.checkConfirm,\n                                        }],\n                                    })(\n                                        <Input type=\"password\" />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label=\"确认密码\"\n                                    hasFeedback\n                                >\n                                    {getFieldDecorator('confirm', {\n                                        rules: [{\n                                            required: true, message: '请确认你的密码!',\n                                        }, {\n                                            validator: this.checkPassword,\n                                        }],\n                                    })(\n                                        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label={(\n                                        <span>\n                                            昵称&nbsp;\n                                            <Tooltip title=\"别人怎么称呼你?\">\n                                            <Icon type=\"question-circle-o\" />\n                                          </Tooltip>\n                                        </span>\n                                    )}\n                                    hasFeedback\n                                >\n                                    {getFieldDecorator('nickname', {\n                                        rules: [{ required: true, message: '请输入昵称!', whitespace: true }],\n                                    })(\n                                        <Input />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label=\"常住地址\"\n                                >\n                                    {getFieldDecorator('residence', {\n                                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                                        rules: [{ type: 'array', required: true, message: '请选择你的常住地址!' }],\n                                    })(\n                                        <Cascader options={residences} />\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label=\"电话号码\"\n                                >\n                                    {getFieldDecorator('phone', {\n                                        rules: [{ required: true, message: '请输入你的电话号码!' }],\n                                    })(\n                                        <Input addonBefore={prefixSelector} />\n\n                                    )}\n                                </FormItem>\n                                <FormItem\n                                    {...formItemLayout}\n                                    label=\"验证码\"\n                                    extra=\"我们必须确认你不是机器人.\"\n                                >\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            {getFieldDecorator('captcha', {\n                                                rules: [{ required: true, message: '请输入你获取的验证码!' }],\n                                            })(\n                                                <Input size=\"large\" />\n                                            )}\n                                        </Col>\n                                        <Col span={12}>\n                                            <Button size=\"large\">获取验证码</Button>\n                                        </Col>\n                                    </Row>\n                                </FormItem>\n                                <FormItem {...tailFormItemLayout} style={{ marginBottom: 8 }}>\n                                    {getFieldDecorator('agreement', {\n                                        valuePropName: 'checked',\n                                    })(\n                                        <Checkbox>我已经阅读过 <span>协议</span></Checkbox>\n                                    )}\n                                </FormItem>\n                                <FormItem {...tailFormItemLayout}>\n                                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">注册</Button>\n                                </FormItem>\n                            </Form>\n                        </Card>\n                    </div>\n                </Col>\n                <Col className=\"gutter-row\" md={12}>\n                    <div className=\"gutter-box\">\n                        <Card title=\"登录表单\" bordered={false}>\n                            <LoginForm />\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col className=\"gutter-row\" md={14}>\n                    <div className=\"gutter-box\">\n                        <Card title=\"水平表单\" bordered={false}>\n                            <HorizontalForm />\n                        </Card>\n                    </div>\n                </Col>\n                <Col className=\"gutter-row\" md={10}>\n                    <div className=\"gutter-box\">\n                        <Card title=\"弹层表单\" bordered={false}>\n                            <ModalForm />\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n        )\n    }\n}\n\nconst BasicForm = Form.create()(BasicForms);\n\nexport default BasicForm;"]},"metadata":{},"sourceType":"module"}