{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport _classCallCheck from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/antdAdminPro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/evan/antdAdminPro/src/components/pages/Login.jsx\";\n\n/**\n * Created by hao.cheng on 2017/4/16.\n */\nimport React from 'react';\nimport { PwaInstaller } from '../widget';\nimport { connectAlita } from 'redux-alita';\nvar FormItem = _Form.Item;\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          var setAlitaState = _this.props.setAlitaState;\n          if (values.userName === 'admin' && values.password === 'admin') setAlitaState({\n            funcName: 'admin',\n            stateName: 'auth'\n          });\n          if (values.userName === 'guest' && values.password === 'guest') setAlitaState({\n            funcName: 'guest',\n            stateName: 'auth'\n          });\n        }\n      });\n    };\n\n    _this.gitHub = function () {\n      window.location.href = 'https://github.com/login/oauth/authorize?client_id=792cdcd244e98dcd2dee&redirect_uri=http://localhost:3006/&scope=user&state=reactAdmin';\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var setAlitaState = this.props.setAlitaState;\n      setAlitaState({\n        stateName: 'auth',\n        data: null\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // React 16.3+弃用componentWillReceiveProps\n      var _this$props = this.props,\n          _this$props$auth = _this$props.auth,\n          nextAuth = _this$props$auth === void 0 ? {} : _this$props$auth,\n          history = _this$props.history; // const { history } = this.props;\n\n      if (nextAuth.data && nextAuth.data.uid) {\n        // 判断是否登陆\n        localStorage.setItem('user', JSON.stringify(nextAuth.data));\n        history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"React Admin\"), React.createElement(PwaInstaller, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        style: {\n          maxWidth: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: '请输入用户名!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            fontSize: 13\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }),\n        placeholder: \"\\u7BA1\\u7406\\u5458\\u8F93\\u5165admin, \\u6E38\\u5BA2\\u8F93\\u5165guest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: '请输入密码!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            fontSize: 13\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"\\u7BA1\\u7406\\u5458\\u8F93\\u5165admin, \\u6E38\\u5BA2\\u8F93\\u5165guest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u8BB0\\u4F4F\\u6211\")), React.createElement(\"span\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\"), React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\"), React.createElement(\"p\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u6216 \\u73B0\\u5728\\u5C31\\u53BB\\u6CE8\\u518C!\"), React.createElement(\"span\", {\n        onClick: this.gitHub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"github\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"(\\u7B2C\\u4E09\\u65B9\\u767B\\u5F55)\"))))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default connectAlita(['auth'])(_Form.create()(Login));","map":{"version":3,"sources":["/Users/evan/antdAdminPro/src/components/pages/Login.jsx"],"names":["React","PwaInstaller","connectAlita","FormItem","Item","Login","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","setAlitaState","userName","password","funcName","stateName","gitHub","window","location","href","data","prevProps","auth","nextAuth","history","uid","localStorage","setItem","JSON","stringify","push","getFieldDecorator","maxWidth","rules","required","message","fontSize","valuePropName","initialValue","float","width","display","justifyContent","Component","create"],"mappings":"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","sourcesContent":["/**\n * Created by hao.cheng on 2017/4/16.\n */\nimport React from 'react';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport { PwaInstaller } from '../widget';\nimport { connectAlita } from 'redux-alita';\n\nconst FormItem = Form.Item;\n\nclass Login extends React.Component {\n    componentDidMount() {\n        const { setAlitaState } = this.props;\n        setAlitaState({ stateName: 'auth', data: null });\n    }\n    componentDidUpdate(prevProps) { // React 16.3+弃用componentWillReceiveProps\n        const { auth: nextAuth = {}, history } = this.props;\n        // const { history } = this.props;\n        if (nextAuth.data && nextAuth.data.uid) { // 判断是否登陆\n            localStorage.setItem('user', JSON.stringify(nextAuth.data));\n            history.push('/');\n        }\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                const { setAlitaState } = this.props;\n                if (values.userName === 'admin' && values.password === 'admin') setAlitaState({ funcName: 'admin', stateName: 'auth' });\n                if (values.userName === 'guest' && values.password === 'guest') setAlitaState({ funcName: 'guest', stateName: 'auth' });\n            }\n        });\n    };\n    gitHub = () => {\n        window.location.href = 'https://github.com/login/oauth/authorize?client_id=792cdcd244e98dcd2dee&redirect_uri=http://localhost:3006/&scope=user&state=reactAdmin';\n    };\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"login\">\n                <div className=\"login-form\" >\n                    <div className=\"login-logo\">\n                        <span>React Admin</span>\n                        <PwaInstaller />\n                    </div>\n                    <Form onSubmit={this.handleSubmit} style={{maxWidth: '300px'}}>\n                        <FormItem>\n                            {getFieldDecorator('userName', {\n                                rules: [{ required: true, message: '请输入用户名!' }],\n                            })(\n                                <Input prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />} placeholder=\"管理员输入admin, 游客输入guest\" />\n                            )}\n                        </FormItem>\n                        <FormItem>\n                            {getFieldDecorator('password', {\n                                rules: [{ required: true, message: '请输入密码!' }],\n                            })(\n                                <Input prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />} type=\"password\" placeholder=\"管理员输入admin, 游客输入guest\" />\n                            )}\n                        </FormItem>\n                        <FormItem>\n                            {getFieldDecorator('remember', {\n                                valuePropName: 'checked',\n                                initialValue: true,\n                            })(\n                                <Checkbox>记住我</Checkbox>\n                            )}\n                            <span className=\"login-form-forgot\" href=\"\" style={{float: 'right'}}>忘记密码</span>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{width: '100%'}}>\n                                登录\n                            </Button>\n                            <p style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <span >或 现在就去注册!</span>\n                                <span onClick={this.gitHub} ><Icon type=\"github\" />(第三方登录)</span>\n                            </p>\n                        </FormItem>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connectAlita(['auth'])(Form.create()(Login));"]},"metadata":{},"sourceType":"module"}